!function(){"use strict";angular.module("afrmApp",["ngMaterial","ngAnimate","ngRoute","angular.filter"]).config(["$mdThemingProvider","$mdDateLocaleProvider",function(t,o){o.formatDate=function(t){return moment(t).format("YYYY-MM-DD")},t.definePalette("plingPallete",{50:"1165ae",100:"ffcdd2",200:"ef9a9a",300:"e57373",400:"ef5350",500:"f44336",600:"e53935",700:"d32f2f",800:"c62828",900:"b71c1c",A100:"ff8a80",A200:"ff5252",A400:"ff1744",A700:"d50000",contrastDefaultColor:"light"}),t.theme("default").primaryPalette("plingPallete",{"default":"50"}).accentPalette("blue-grey",{"default":"400"}).backgroundPalette("grey",{"default":"50"})}])}(),function(){"use strict";function t(t,o,e,n,a,i){function r(){var o=t.toastPosition;o.bottom&&l.top&&(o.top=!1),o.top&&l.bottom&&(o.bottom=!1),o.right&&l.left&&(o.left=!1),o.left&&l.right&&(o.right=!1),l=angular.extend({},o)}var l={bottom:!0,top:!1,left:!0,right:!1};o.config={chat:{isLoadOnStart:!1}},o.isAppLoaded=!1,o.loadingLayer=!1,o.isAppLoading=!0,t.toastPosition=angular.extend({},l),t.getToastPosition=function(){return r(),Object.keys(t.toastPosition).filter(function(o){return t.toastPosition[o]}).join(" ")},o.toast=function(o,e){i.show(i.simple().textContent(o).position(t.getToastPosition()).hideDelay(e||2e3))},o.$on("$routeChangeStart",function(){console.log(">>>")}),o.$on("$routeChangeSuccess",function(){console.log("<<<")})}t.$inject=["$scope","$rootScope","$timeout","$location","$window","$mdToast"],angular.module("afrmApp").controller("MainController",t)}(),function(){"use strict";function t(t,o){t.when("/",{templateUrl:"app/components/home/home.html",controller:"HomeController"}).otherwise({redirectTo:"/"}),o.html5Mode(!0)}angular.module("afrmApp").config(["$routeProvider","$locationProvider",t])}(),function(){"use strict";function t(){console.log("teste")}angular.module("afrmApp").controller("HomeController",t),t.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;base64,
