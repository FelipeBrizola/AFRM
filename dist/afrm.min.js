!function(){"use strict";angular.module("afrmApp",["ngMaterial","ngAnimate","ngRoute","angular.filter","md.data.table"]).config(["$mdThemingProvider","$mdDateLocaleProvider",function(n,e){e.formatDate=function(n){return moment(n).format("YYYY-MM-DD")},n.theme("forest").primaryPalette("blue").accentPalette("teal").warnPalette("red").backgroundPalette("grey")}])}(),function(){"use strict";function n(n,e,t){e.serverUrl="https://dev-sistemas-server.herokuapp.com/",n.menu=function(n){t.path(n)},e.$on("$routeChangeSuccess",function(){"/empresas"===t.path()?n.currentMenuIndex=1:"/solicitacao"===t.path()?n.currentMenuIndex=0:"/estagios"===t.path()?n.currentMenuIndex=2:n.currentMenuIndex=-1,e.isLogin="/login"===t.path()})}n.$inject=["$scope","$rootScope","$location"],angular.module("afrmApp").controller("MainController",n)}(),function(){"use strict";function n(n,e){n.when("/login",{templateUrl:"app/components/login/login.html",controller:"LoginController"}).when("/solicitacao",{templateUrl:"app/components/solicitation/solicitation.html",controller:"SolicitationController"}).when("/empresas",{templateUrl:"app/components/companies/companies.html",controller:"CompaniesController"}).when("/estagios",{templateUrl:"app/components/internships/internships.html",controller:"InternshipsController"}).when("/registro",{templateUrl:"app/components/login/register.html",controller:"RegisterController"}).otherwise({redirectTo:"/login"}),e.html5Mode(!0)}angular.module("afrmApp").config(["$routeProvider","$locationProvider",n])}(),function(){"use strict";function n(n,e,t){n.showDialog=function(t){e.show({controller:"ManageCompanyController",templateUrl:"app/shared/templates/modals/manage-company.html",parent:angular.element(document.body),locals:{company:t||null},clickOutsideToClose:!0}).then(function(e,t){e&&(t?n.companies.push(e):n.companies.forEach(function(n){n._id===e._id&&(n=e)}))},function(){})},function(){t.get().success(function(e){n.companies=e}).error(function(n){console.log(n)})}()}angular.module("afrmApp").controller("CompaniesController",n),n.$inject=["$scope","$mdDialog","companiesService"]}(),function(){"use strict";function n(n){n.approveSolicitation=function(){},n.insertSolicitation=function(){}}angular.module("afrmApp").controller("HomeController",n),n.$inject=["$scope"]}(),function(){"use strict";function n(n,e,t){n.showDialog=function(t,o){"Aguardando aprovação"!==t.status||"coordinator"!==n.credential.role&&"student"!==n.credential.role||e.show({controller:"InternshipDialogController",templateUrl:"app/shared/templates/modals/internship-dialog.html",parent:angular.element(document.body),locals:{internship:t||{},credential:o},clickOutsideToClose:!0})},n.search=function(e){var o={credentialId:n.credential._id};e.name&&(o.name=e.name.trim()),e.status&&"Todos"!==e.status.trim()&&(o.status=e.status.trim()),t.get(o).success(function(e){n.internships=e}).error(function(n){console.log(n)})},function(){var e={};n.query={},n.status=["Todos","Em andamento","Reprovado","Cancelado","Aguardando aprovação","Finalizado"],n.credential=JSON.parse(window.localStorage.getItem("CREDENTIAL")),n.isStudent="student"===n.credential.role,e={credentialId:n.credential._id},t.get(e).success(function(e){n.internships=e}).error(function(n){console.log(n)})}()}angular.module("afrmApp").controller("InternshipsController",n),n.$inject=["$scope","$mdDialog","internshipsService"]}(),function(){"use strict";function n(n,e,t){n.login=function(n,o){var r={email:n,password:o};e.login(r).success(function(n){n&&(window.localStorage.setItem("CREDENTIAL",JSON.stringify(n)),t.path("/estagios"))}).error(function(n){console.log(n)})},function(){console.log("logincontroller")}()}angular.module("afrmApp").controller("LoginController",n),n.$inject=["$scope","credentialsService","$location"]}(),function(){"use strict";function n(n,e,t,o,r){n.createAccount=function(n){e.create(n).success(function(n){n&&(o.show(o.simple().textContent("Usuário criado com sucesso").position("bottom").hideDelay(3e3)),r(function(){t("/login")},3e3))}).error(function(n){console.log(n)})}}angular.module("afrmApp").controller("RegisterController",n),n.$inject=["$scope","credentialsService","$location","$mdToast","$timeout"]}(),function(){"use strict";function n(n){n.approveSolicitation=function(){},n.insertSolicitation=function(){}}angular.module("afrmApp").controller("SolicitationController",n),n.$inject=["$scope"]}(),function(){"use strict";function n(n,e){var t="companies";this.create=function(o){return n.post(e.serverUrl+t,o)},this.update=function(o){return n.put(e.serverUrl+t,o)},this.get=function(){return n.get(e.serverUrl+t)}}n.$inject=["$http","$rootScope"],angular.module("afrmApp").service("companiesService",n)}(),function(){"use strict";function n(n,e){var t="credentials";this.login=function(o){var r="?email="+o.email+"&password="+o.password;return n.get(e.serverUrl+t+"/"+r)},this.create=function(o){return n.post(e.serverUrl+t,o)},this.logout=function(o){return n.get(e.serverUrl+t+"/"+o)}}n.$inject=["$http","$rootScope"],angular.module("afrmApp").service("credentialsService",n)}(),function(){"use strict";function n(n,e){var t="internships";this.get=function(o){var r=e.serverUrl+t+"/?";return o.credentialId&&(r+="credentialId="+o.credentialId),o.status&&(r+="&status="+o.status),o.name&&(r+="&name="+o.name),n.get(r)},this.update=function(o){return n.put(e.serverUrl+t,o)}}n.$inject=["$http","$rootScope"],angular.module("afrmApp").service("internshipsService",n)}(),function(){"use strict";function n(n,e,t,o){function r(){n.isSaving=!0,t.update(n.internship).success(function(){n.isSaving=!1,e.hide(n.internship)}).error(function(t){console.log(t),n.isSaving=!1,e.hide()})}n.save=function(e){e&&"coordinator"===n.credential.role?(n.internship.status="Em andamento",n.internship.begin=moment().format("DD/MM/YYYY"),n.internship.end=moment(moment()).add(6,"months").format("DD/MM/YYYY")):e||"coordinator"!==n.credential.role?e||"student"!==n.credential.role||(n.internship.status="Cancelado"):n.internship.status="Reprovado",r()},n.closeDialog=function(){e.cancel()},function(){n.internship=o.internship||{},n.credential=o.credential||{}}()}n.$inject=["$scope","$mdDialog","internshipsService","locals"],angular.module("afrmApp").controller("InternshipDialogController",n)}(),function(){"use strict";function n(n,e,t,o){n.save=function(o){var r;n.isLoadingCompany=!0,n.isEditing?(r=!1,t.update(o).success(function(t){n.isLoadingCompany=!1,e.hide(t,r)}).error(function(e){n.isLoadingCompany=!1,console.log(e)})):(r=!0,t.create(o).success(function(t){n.isLoadingCompany=!1,e.hide(t,r)}).error(function(e){n.isLoadingCompany=!1,console.log(e)}))},function(){o.company&&(n.isEditing=!0),n.company=o.company||{}}()}n.$inject=["$scope","$mdDialog","companiesService","locals"],angular.module("afrmApp").controller("ManageCompanyController",n)}();
//# sourceMappingURL=data:application/json;base64,
